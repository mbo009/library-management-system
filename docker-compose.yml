version: '3.9'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper
  kafka:
    image: bitnami/kafka:3.8
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    container_name: kafka

  elasticsearch:
    image: elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    container_name: elasticsearch

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - SERVICE_ROLE=backend
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_BROKER=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - elasticsearch
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend/library-management-system
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app

  kafka_consumer:
    build:
      context: ./backend
      dockerfile: ./api/consumer/Dockerfile
    container_name: kafka_consumer
    environment:
      - SERVICE_ROLE=kafka_consumer
    command: python manage.py start_inventory_consumer
    depends_on:
      - backend

volumes:
  elastic_data:
  kafka_data:
  zookeeper_data:
