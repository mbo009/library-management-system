# version: '3.9'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.8
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    platform: linux/amd64
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SERVICE_ROLE=backend
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_BROKER=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - elasticsearch
    command: [ "/app/wait-for-it.sh", "kafka:9092", "--", "sh", "-c", "python manage.py runserver 0.0.0.0:8000" ]
    volumes:
      - ./backend:/app

  # frontend:
  #   build:
  #     context: ./frontend/library-management-system
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app

  pgadmin1:
    image: dpage/pgadmin4
    container_name: pgadmin1
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin

  kafka_consumer:
    build:
      context: ./backend
      dockerfile: ./api/consumer/Dockerfile
    container_name: kafka_consumer
    environment:
      - SERVICE_ROLE=kafka_consumer
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_BROKER=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    env_file:
      - .env
    command: [ "./wait-for-it.sh", "backend:8000", "--", "sh", "-c", "python manage.py start_inventory_consumer" ]
    depends_on:
      - backend

volumes:
  elastic_data:
  kafka_data:
  zookeeper_data:
